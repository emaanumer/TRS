from tkinter import *
from tkinter import ttk
from PIL import ImageTk,Image
from tkcalendar import DateEntry
from datetime import date
import sys
import os
import csv
import json
import os

path=os.getcwd()
path=path.replace('\\'  ,  '/')

def updatebooking():
    window2.destroy()
    page3()

def cancelbooking():
    window2.destroy()
    page2()

def create__booking():
    window2.destroy()
    page1()

def restart():
    window.destroy()
    mainmenu()

def mainmenu2():
    root1.destroy()
    mainmenu()

def mainmenu3():
    root.destroy()
    mainmenu()

def mainmenu():
    global window2
    window2=Tk()
    window2.title("Main Menu")
    window2.iconbitmap(path+'/train2.ico')

    img =Image.open(path+'/trainnn.jpg')
    img2= img.resize((300,500), Image.ANTIALIAS)
    img3= ImageTk.PhotoImage(img2)
    imglabel=Label(image=img3)
    imglabel.place(x=0,y=0)

    label1=Label(window2,text="Welcome to PYRAILS\n \n Please choose one of the\nfollowing options to continue:",font=('bahnschrift semibold',12))
    label1.place(x=370,y=30)

    btn1=Button(window2,text='New Booking',font=('bahnschrift semibold',10),bg='black', fg='white',command=create__booking)
    btn1.place(x=390,y=180,width=150,height=30)

    btn2=Button(window2,text='Update Booking',font=('bahnschrift semibold',10),bg='black', fg='white',command=updatebooking)
    btn2.place(x=390,y=230,width=150,height=30)

    btn3=Button(window2,text='Cancel Booking',font=('bahnschrift semibold',10),bg='black', fg='white',command=cancelbooking)
    btn3.place(x=390,y=280,width=150,height=30)

    window2.geometry('650x500')
    window2.resizable(False,False)

    window2.mainloop()


def page1():
    global window
    window= Tk()
    window.title("User Info")
    window.iconbitmap(path+'/train2.ico')

    img =Image.open(path+'/trainnn.jpg')
    img2= img.resize((300,540), Image.ANTIALIAS)
    img3= ImageTk.PhotoImage(img2)
    imglabel=Label(image=img3)
    imglabel.place(x=0,y=0)

    def homepage():
        window.destroy()
        import HOMEPAGE

    def user__data():
        global name, cnic
        name=var_entry1.get()
        cnic=var_entry2.get()
        if name!='':
            try:
                age
                destination
                searchtrains.configure(state='normal')
            except NameError:
                pass
        else:
            searchtrains.configure(state='disabled')


    def seatselect(seatnum): #this function will take the value of seat selected and remove it from the file of trains it is in.
        global selectedseat
        selectedseat = seatnum
        uniquetrainID  = selectedvalues['values'][1]
        uniquetrainID= uniquetrainID[1:]
        changedseatlist = []

        file= open(path+'/seating.txt', 'r')
        tempfile = open(path+"/tempfile.txt",'w')
        for line in file:
            wholeline = line.strip()
            if wholeline[0:10] == uniquetrainID:
                linetoreplace=wholeline
                if selectedseat in linetoreplace:
                    linetoreplace = linetoreplace.replace((","+selectedseat),"")
            else:
                tempfile.write(line) 
        file.close()
        tempfile.close()
        tempfile = open(path+"/tempfile.txt",'r')
        file= open(path+'/seating.txt', 'w')
        for line in tempfile:
            file.write(line)
        file.close()
        tempfile.close()
        file= open(path+'/seating.txt', 'a')
        file.write('\n'+linetoreplace)
        file.close()


    def newwindow():
        
        # Toplevel object which will
        # be treated as a new window
        newindow = Toplevel(window)

        newindow.title("Existing Booking")

        label1=Label(newindow,text="Name:",font=('bahnschrift semibold',13)).place(x=30,y=30)
        label1a=Label(newindow,text=var_entry1.get(),font=('bahnschrift semibold',13)).place(x=160,y=30)
        label2=Label(newindow,text="CNIC:",font=('bahnschrift semibold',13)).place(x=30,y=60)
        label2a=Label(newindow,text=var_entry2.get(),font=('bahnschrift semibold',13)).place(x=160,y=60)
        label3=Label(newindow,text="Departure City:",font=('bahnschrift semibold',13)).place(x=30,y=90)
        label3a=Label(newindow,text=deptcity,font=('bahnschrift semibold',13)).place(x=160,y=90)
        label4=Label(newindow,text="Destination City:",font=('bahnschrift semibold',13)).place(x=30,y=120)
        label4a=Label(newindow,text=destination,font=('bahnschrift semibold',13)).place(x=160,y=120)
        label5=Label(newindow,text="Train:",font=('bahnschrift semibold',13)).place(x=30,y=150)
        label5a=Label(newindow,text=selectedvalues["values"][1],font=('bahnschrift semibold',13)).place(x=160,y=150)
        label6=Label(newindow,text="Date:",font=('bahnschrift semibold',13)).place(x=30,y=180)
        label6a=Label(newindow,text=selectedvalues["values"][0],font=('bahnschrift semibold',13)).place(x=160,y=180)
        label7=Label(newindow,text="Seat",font=('bahnschrift semibold',13)).place(x=30,y=210)
        label7a=Label(newindow,text=selectedseat,font=('bahnschrift semibold',13)).place(x=160,y=210)
        label9=Label(newindow,text="Fare Cost",font=('bahnschrift semibold',13)).place(x=30,y=270)
        label9a=Label(newindow,text=selectedvalues["values"][5],font=('bahnschrift semibold',13)).place(x=160,y=270)

        newindow.geometry("500x350")
        newindow.resizable(False,False)

    def selectItem(a): #provides values of the table clicked on
        global drop3
        drop3.destroy()
        #provides values of the table clicked on
        curItem = traincards.focus() #record focused
        global selectedvalues
        selectedvalues= traincards.item(curItem) #user clicks on the record and we store it
        uniquetrainID  = selectedvalues['values'][1]  #takes only the train ID from the values selected
        uniquetrainID= uniquetrainID[1:] #takes out the space that exists before T
        file= open(path+'/seating.txt', 'r') #this code opens the main seating file
        for line in file: #iterating through every line in the file
            wholeline = line.strip() #takes current line
            if wholeline[0:10] == uniquetrainID: #compares the selected train value with all the train IDs in the rows
                seatstring= wholeline[11:] #once found, takes only the seat numbers
                seatlist = seatstring.split(',') #the seat numbers are strings separated by commas so theyre made into a list.
                #this seat list must be taken as the agrument for drop3 optionmenu
        var_drop3=StringVar()
        var_drop3.set('select your seating')
        drop3=OptionMenu(window,var_drop3,*seatlist,command= seatselect)
        drop3.place(x=400,y=450)


    def calc_age(event):
        agedict={}
        w = event.widget
        dob = w.get_date()
        today=date.today()
        global age
        age=today.year - dob.year - ((today.month, today.day) < (dob.month, dob.day))
        file = open(path+'/agechart.txt','a')
        agedict={"CNIC":var_entry2.get() ,"Age":age}
        file.write(json.dumps(agedict)+ "\n")
        file.close()


    def calc_dis(trainfare):
        discount = ""
        if age < 2:
            discount = "0" + "(young discount)"
        elif age >= 2 and age < 18:
            discount = str(int(trainfare) * 0.8) + "(children discount)"
        elif age > 60:
            discount = str(int(trainfare)*0.6) + "(senior discount)"
        elif age >=18 and age <=60:
            discount = str(int(trainfare)) + "(no discount)"
        return discount


    def Train_cards():
        for row in traincards.get_children():
            traincards.delete(row)
        global deptcity
        deptcity = var_drop1.get()
        if (deptcity == 'Quetta' or deptcity == 'Peshawar') and (destination == 'Quetta' or destination == 'Peshawar'):
            file = open(path+'/trainQTAPHR.csv')
        elif (deptcity == 'Islamabad' or deptcity == 'Lahore') and (destination == 'Islamabad' or destination == 'Lahore'):
            file = open(path+'/trainISLLHR_LHRMLT.csv')
        elif (deptcity == 'Lahore' or deptcity == 'Multan') and (destination == 'Multan' or destination == 'Lahore'):
            file = open(path+'/trainISLLHR_LHRMLT.csv')
        elif (deptcity == 'Islamabad' or deptcity == 'Multan') and (destination == 'Multan' or destination == 'Islamabad'):
            file = open(path+'/trainISLMLT_KHIMLT.csv')
        elif (deptcity == 'Karachi' or deptcity == 'Multan') and (destination == 'Multan' or destination == 'Karachi'):
            file = open(path+'/trainISLMLT_KHIMLT.csv')
        elif (deptcity == 'Islamabad' or deptcity == 'Karachi') and (destination == 'Islamabad' or destination == 'Karachi'):
            file = open(path+'/trainISLKHI.csv')
        elif (deptcity == 'Islamabad' or deptcity == 'Peshawar') and (destination == 'Islamabad' or destination == 'Peshawar'):
            file = open(path+'/trainISLPHR.csv')
        elif (deptcity == 'Islamabad' or deptcity == 'Quetta') and (destination == 'Islamabad' or destination == 'Quetta'):
            file = open(path+'/trainISLQTA.csv')
        elif (deptcity == 'Karachi' or deptcity == 'Quetta') and (destination == 'Karachi' or destination == 'Quetta'):
            file = open(path+'/trainKHIQTA.csv')
        elif (deptcity == 'Karachi' or deptcity == 'Peshawar') and (destination == 'Karachi' or destination == 'Peshawar'):
            file = open(path+'/trainKHIPHR.csv')
        elif (deptcity == 'Karachi' or deptcity == 'Lahore') and (destination == 'Karachi' or destination == 'Lahore'):
            file = open(path+'/trainKHILHR.csv')
        elif (deptcity == 'Quetta' or deptcity == 'Lahore') and (destination == 'Quetta' or destination == 'Lahore'):
            file = open(path+'/trainQTALHR.csv')
        elif (deptcity == 'Peshawar' or deptcity == 'Lahore') and (destination == 'Peshawar' or destination == 'Lahore'):
            file = open(path+'/trainPHRLHR.csv')
        elif (deptcity == 'Multan' or deptcity == 'Quetta') and (destination == 'Multan' or destination == 'Quetta'):
            file = open(path+'/trainMLTQTA.csv')
        elif (deptcity == 'Multan' or deptcity == 'Peshawar') and (destination == 'Multan' or destination == 'Peshawar'):
            file = open(path+'/trainMLTPHR.csv')
        csvreader = csv.reader(file)
        data = []
        for row in csvreader:
            data.append(row)
        file.close()

        count=0
        for record in data:
            record[5] = calc_dis(record[5])
            traincards.insert(parent="", index="end",iid=count, text=str(count+1), values=(record[0],record[1],record[2],record[3],record[4], record[5]))
            count +=1

    def character_limit(entry_text):
        if len(entry4.get()) > 11:
            var_entry4.set(entry_text.get()[:11])
        if len(entry2.get()) > 13:
            var_entry2.set(entry_text.get()[:13])


    def destination_select(event):
        global destination
        destination=event

    def destination_cities(event):
        global drop2
        global destination
        try:
            destination
            del destination
        except NameError:
            pass
        citylist=['Islamabad','Lahore','Multan','Quetta','Peshawar','Karachi']
        global departure
        departure=event
        global label5
        drop2.destroy()
        label5.destroy()
        citylist.remove(departure)
        label5=Label(window,text="Destination City: ",font=('bahnschrift semibold',13))
        label5.place(x=750,y=140)
        var_drop2=StringVar()
        var_drop2.set('Select A City')
        drop2=OptionMenu(window,var_drop2,*citylist, command= destination_select)
        drop2.place(x=900,y=140)
        searchtrains.configure(state='disabled')

    def on_focus_in(entry, placeholder):
        entry.configure(state='normal')
        if entry.get()== placeholder:
            entry.delete(0, 'end')

    def on_focus_out(entry, placeholder):
        if entry.get() == "":
            entry.insert(0, placeholder)
            entry.configure(state='disabled')

    def savedata():
        user_data['Name']=var_entry1.get()
        user_data['CNIC']=var_entry2.get()
        user_data['Departure']=var_drop1.get()
        user_data['Destination']=destination
        farecostvalue=selectedvalues['values'][5]
        count = len(str(farecostvalue))
        while farecostvalue.isdigit() == False:
            farecostvalue= str(farecostvalue)[0:count]
            count -=1
        if selectedseat[3:4] == 'B' and age>2:
            farecostvalue = 100 + int(farecostvalue)
        else:
            farecostvalue=int(farecostvalue)
        selectedvalues['values'][5]=farecostvalue
        user_data['Train']=selectedvalues['values']
        user_data['Seat']=selectedseat
        file=open(path+'/Train_Data.txt', 'a')
        file.write(json.dumps(user_data)+ "\n")
        file.close()
        print("saved")

    user_data={}

    label0=Label(window,text="Please enter the following details:",font=('bahnschrift semibold',13))
    label0.place(x=330,y=30)

    label1=Label(window,text="Name:",font=('bahnschrift semibold',13))
    label1.place(x=330,y=60)

    var_entry1=StringVar()
    entry1=ttk.Entry(window,textvariable=var_entry1)
    entry1.place(x=470,y=60)
    entry1.focus()

    label2=Label(window,text="CNIC: ",font=('bahnschrift semibold',13))
    label2.place(x=330,y=100)

    var_entry2=StringVar(window, value='3650112345678')
    entry2=ttk.Entry(window,textvariable=var_entry2)
    entry2.place(x=470,y=100)
    var_entry2.trace("w", lambda *args: character_limit(entry2))
    entry2.configure(state='disabled')
    y_focus_in = entry2.bind('<Button-1>', lambda x: on_focus_in(entry2, '3650112345678'))
    y_focus_out = entry2.bind(
        '<FocusOut>', lambda x: on_focus_out(entry2, '3650112345678'))

    label2=Label(window,text="Date Of Birth: ",font=('bahnschrift semibold',13))
    label2.place(x=330,y=140)

    calendar = DateEntry(window ,locale='en_US', date_pattern='dd/mm/yyyy', width= 16, background= "black", foreground= "white",bd=2)
    calendar.place(x=470,y=140)
    calendar.bind("<<DateEntrySelected>>", calc_age)

    label3=Label(window,text="Contact Number: ",font=('bahnschrift semibold',13))
    label3.place(x=750,y=60)

    var_entry4=StringVar(window, value= '03001234567')
    entry4=ttk.Entry(window, textvariable=var_entry4)
    entry4.place(x=900,y=62)
    entry4.configure(state='disabled')
    var_entry4.trace("w", lambda *args: character_limit(entry4))
    x_focus_in = entry4.bind('<Button-1>', lambda x: on_focus_in(entry4, '03001234567'))
    x_focus_out = entry4.bind(
        '<FocusOut>', lambda x: on_focus_out(entry4, '03001234567'))

    label4=Label(window,text="Departure City: ",font=('bahnschrift semibold',13))
    label4.place(x=750,y=100)

    citylist=['Islamabad','Lahore','Multan','Quetta','Peshawar','Karachi']

    var_drop1=StringVar()
    var_drop1.set('Select your City')
    drop1=OptionMenu(window,var_drop1,*citylist, command= destination_cities)
    drop1.place(x=900,y=100)

    global label5

    label5=Label(window,text="Destination City: ",font=('bahnschrift semibold',13))
    label5.place(x=750,y=140)

    var_drop2=StringVar()
    var_drop2.set('Select Departure First')
    global drop2
    drop2=OptionMenu(window, var_drop2 ,'')
    drop2.place(x=900,y=140)
    drop2.config(state=DISABLED)

    #making the train cards table
    style = ttk.Style()
    style.theme_use("clam")
    style.configure("Treeview", background="silver", foreground="black", rowheight=15,fieldbackground="silver")
    style.map('Treeview', background=[("selected", "orange")])
    traincards=ttk.Treeview(window)
    traincards['columns'] = ("Date","Train ID", "Departure Time", "Destination Time", "Duration", "Fare Cost")

    traincards.column("#0", anchor=CENTER, width=120, minwidth=10)
    traincards.column("Date",anchor=CENTER, width=120, stretch=NO)
    traincards.column("Train ID",anchor=CENTER, width=120, stretch=NO)
    traincards.column("Departure Time",anchor=CENTER, width=120, stretch=NO)
    traincards.column("Destination Time",anchor=CENTER, width=120, stretch=NO)
    traincards.column("Duration",anchor=CENTER, width=120, stretch=NO)
    traincards.column("Fare Cost",anchor=CENTER, width=120, stretch=NO)

    traincards.heading("#0", text="#",anchor=CENTER)
    traincards.heading("Date", text="Date",anchor=CENTER)
    traincards.heading("Train ID", text="Train ID",anchor=CENTER)
    traincards.heading("Departure Time", text="Departure Time",anchor=CENTER)
    traincards.heading("Destination Time", text="Destination Time",anchor=CENTER)
    traincards.heading("Duration", text="Duration",anchor=CENTER)
    traincards.heading("Fare Cost", text="Fare Cost",anchor=CENTER)
    traincards.bind('<ButtonRelease-1>', selectItem)
    traincards.place(x=305,y=220)

    #making the seating structure
    seatheader = ttk.Label(window, text = "Select Desired Seats From Dropbox Below: ", font=('bahnschrift semibold',13)).place(x = 330, y = 420)
    WS = ttk.Label(window, text = "WS = Window Seat ", font=('bahnschrift semibold',9)).place(x = 690, y = 440)
    AS = ttk.Label(window, text = "AS = Aisle Seat ", font=('bahnschrift semibold',9)).place(x = 830, y = 440)
    UB = ttk.Label(window, text = "UB = Upper Berth ", font=('bahnschrift semibold',9)).place(x = 690, y = 470)
    LB = ttk.Label(window, text = "LB = Lower Berth ", font=('bahnschrift semibold',9)).place(x = 830, y = 470)
    infomessage = ttk.Label(window, text = "*For Berth, fare will increase by Rs.100 ", font=('bahnschrift semibold',9)).place(x = 350, y = 500)
    var_drop3=StringVar()
    var_drop3.set('Select your Seat')
    global drop3
    drop3=OptionMenu(window,var_drop3,'')
    drop3.place(x=400,y=450)

    searchtrains=ttk.Button(window, text= "Search Trains",  command=Train_cards)
    searchtrains.place(x=500,y=180)
    searchtrains.configure(state='disabled')
    confirm=ttk.Button(window, text= "Save Entries",  command=user__data)
    confirm.place(x=400, y=180)

    savedata=ttk.Button(window,text='Save Data',command=savedata).place(x=1010,y=420,width=125,height=30)
    modifybooking=ttk.Button(window,text='View Booking',command=newwindow).place(x=1010,y=460,width=125,height=30)
    goback=ttk.Button(window,text='Main Menu',command=restart).place(x=1010,y=500,width=125,height=30)


    window.geometry('1155x540')
    window.resizable(False,False)
    window.mainloop()




def page3():
    global root1
    root1 = Tk()
    root1.title("Update Booking")
    root1.iconbitmap(path+'/train2.ico')

    img =Image.open(path+'/trainnn.jpg')
    img2= img.resize((300,600), Image.ANTIALIAS)
    img3= ImageTk.PhotoImage(img2)
    imglabel=Label(image=img3)
    imglabel.place(x=0,y=0)

    def updateuserrecord():
        heading.config(text="Your Current Updated Booking Details: ")
        old_dict=user_dict.copy()
        user_dict["Departure"] = deptcity
        user_dict["Destination"] = destination
        farecostvalue=selectedvalues['values'][5]
        count = len(str(farecostvalue))
        while farecostvalue.isdigit() == False:
            farecostvalue= str(farecostvalue)[0:count]
            count -=1
        if selectedseat[3:4] == 'B' and age>2:
            farecostvalue = 100 + int(farecostvalue)
        else:
            farecostvalue=int(farecostvalue)
        selectedvalues['values'][5]=farecostvalue
        user_dict['Train']=selectedvalues['values']
        user_dict["Seat"] = selectedseat
        file = open(path+'/Train_Data.txt', 'r')
        tempfile = open(path+"/tempfile.txt",'w')
        for row in file:
            temprow=row.split(",")
            cnicvalue = temprow[1][10:23] #gets cnic value
            if cnic_entry.get() == cnicvalue:
                tempfile.write(json.dumps(user_dict)+ "\n")
            else:
                tempfile.write(row)
        file.close()
        tempfile.close()
        tempfile = open(path+"/tempfile.txt",'r')
        file= open(path+'/Train_Data.txt', 'w')
        for line in tempfile:
            file.write(line)
        file.close()
        tempfile.close()
        file= open(path+'/seating.txt', 'r')
        tempfile = open(path+"/tempfile.txt",'w')
        for line in file:
            if line[0:10] == old_dict['Train'][1][1:]:
                line = (line.strip() + "," + old_dict['Seat']) + '\n'
            if line[0:10] == user_dict['Train'][1][1:]:
                line=line.strip()
                line = (line.replace((","+selectedseat),"")) + '\n'
            tempfile.write(line) 
        file.close()
        tempfile.close()
        tempfile = open(path+"/tempfile.txt",'r')
        file= open(path+'/seating.txt', 'w')
        for line in tempfile:
            file.write(line)
        file.close()
        tempfile.close()
        label3a.config(text=user_dict['Departure'])
        label4a.config(text=user_dict['Destination'])
        label2a.config(text=user_dict['Train'][2])
        label5a.config(text=user_dict['Train'][1])
        label6a.config(text=user_dict['Train'][0])
        label7a.config(text=user_dict['Seat'])
        label8a.config(text=user_dict['Train'][5])


    def seatselect(seatnum): #this function will take the value of seat selected and remove it from the file of trains it is in.
        global selectedseat
        selectedseat = seatnum
        uniquetrainID  = selectedvalues["values"][1]
        uniquetrainID= uniquetrainID[1:]

    def selectItem(a): #provides values of the table clicked on
        global drop4
        drop4.destroy()
        curItem = traincards.focus() #record focused
        global selectedvalues
        selectedvalues= traincards.item(curItem) #user clicks on the record and we store it
        uniquetrainID  = selectedvalues["values"][1]  #takes only the train ID from the values selected
        uniquetrainID= uniquetrainID[1:] #takes out the space that exists before T
        file= open(path+'/seating.txt', 'r') #this code opens the main seating file
        for line in file: #iterating through every line in the file
            wholeline = line.strip() #takes current line
            if wholeline[0:10] == uniquetrainID: #compares the selected train value with all the train IDs in the rows
                seatstring= wholeline[11:] #once found, takes only the seat numbers
                seatlist = seatstring.split(',') #the seat numbers are strings separated by commas so theyre made into a list.
                #this seat list must be taken as the agrument for drop3 optionmenu
        var_drop3=StringVar()
        var_drop3.set('select your seating')
        drop3=OptionMenu(root1,var_drop3,*seatlist,command= seatselect)
        drop3.place(x=330,y=520)

    def Traincards():
        for row in traincards.get_children():
            traincards.delete(row)
        global deptcity, destination
        deptcity = departure2
        destination= destination2
        if (deptcity == 'Quetta' or deptcity == 'Peshawar') and (destination == 'Quetta' or destination == 'Peshawar'):
            file = open(path+'/trainQTAPHR.csv')
        elif (deptcity == 'Islamabad' or deptcity == 'Lahore') and (destination == 'Islamabad' or destination == 'Lahore'):
            file = open(path+'/trainISLLHR_LHRMLT.csv')
        elif (deptcity == 'Lahore' or deptcity == 'Multan') and (destination == 'Multan' or destination == 'Lahore'):
            file = open(path+'/trainISLLHR_LHRMLT.csv')
        elif (deptcity == 'Islamabad' or deptcity == 'Multan') and (destination == 'Multan' or destination == 'Islamabad'):
            file = open(path+'/trainISLMLT_KHIMLT.csv')
        elif (deptcity == 'Karachi' or deptcity == 'Multan') and (destination == 'Multan' or destination == 'Karachi'):
            file = open(path+'/trainISLMLT_KHIMLT.csv')
        elif (deptcity == 'Islamabad' or deptcity == 'Karachi') and (destination == 'Islamabad' or destination == 'Karachi'):
            file = open(path+'/trainISLKHI.csv')
        elif (deptcity == 'Islamabad' or deptcity == 'Peshawar') and (destination == 'Islamabad' or destination == 'Peshawar'):
            file = open(path+'/trainISLPHR.csv')
        elif (deptcity == 'Islamabad' or deptcity == 'Quetta') and (destination == 'Islamabad' or destination == 'Quetta'):
            file = open(path+'/trainISLQTA.csv')
        elif (deptcity == 'Karachi' or deptcity == 'Quetta') and (destination == 'Karachi' or destination == 'Quetta'):
            file = open(path+'/trainKHIQTA.csv')
        elif (deptcity == 'Karachi' or deptcity == 'Peshawar') and (destination == 'Karachi' or destination == 'Peshawar'):
            file = open(path+'/trainKHIPHR.csv')
        elif (deptcity == 'Karachi' or deptcity == 'Lahore') and (destination == 'Karachi' or destination == 'Lahore'):
            file = open(path+'/trainKHILHR.csv')
        elif (deptcity == 'Quetta' or deptcity == 'Lahore') and (destination == 'Quetta' or destination == 'Lahore'):
            file = open(path+'/trainQTALHR.csv')
        elif (deptcity == 'Peshawar' or deptcity == 'Lahore') and (destination == 'Peshawar' or destination == 'Lahore'):
            file = open(path+'/trainPHRLHR.csv')
        elif (deptcity == 'Multan' or deptcity == 'Quetta') and (destination == 'Multan' or destination == 'Quetta'):
            file = open(path+'/trainMLTQTA.csv')
        elif (deptcity == 'Multan' or deptcity == 'Peshawar') and (destination == 'Multan' or destination == 'Peshawar'):
            file = open(path+'/trainMLTPHR.csv')
        csvreader = csv.reader(file)
        data = []
        for row in csvreader:
            data.append(row)









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































            = ""
        if age < 2:
            discount = "0" + "(young discount)"
        elif age >= 2 and age < 18:
            discount = str(int(trainfare) * 0.8) + "(children discount)"
        elif age > 60:
            discount = str(int(trainfare)*0.6) + "(senior discount)"
        elif age >=18 and age <=60:
            discount = str(int(trainfare)) + "(no discount)"
        return discount


    def searchcnic():
        notexist=Label(root1,text="",font=('bahnschrift',9))
        notexist.place(x=600,y=30)
        global user_dict, cnicvalue
        user_dict={}
        flag=False
        file = open(path+'/Train_Data.txt', 'r')
        for row in file:
            listdata = row.split(",")
            cnicvalue = listdata[1][10:23]
            if cnic_entry.get() == cnicvalue:
                flag=True
                user_dict= json.loads(row)
                global label2a,label3a,label4a,label5a,label6a,label7a,label8a
                label1a=Label(root1,text=user_dict["Name"],font=('bahnschrift',11))
                label1a.place(x=400,y=100)
                label2a=Label(root1,text=user_dict["Train"][2],font=('bahnschrift',11))
                label2a.place(x=460,y=160)
                label3a=Label(root1,text=user_dict["Departure"],font=('bahnschrift',11))
                label3a.place(x=460,y=130)
                label4a=Label(root1,text=user_dict["Destination"],font=('bahnschrift',11))
                label4a.place(x=770,y=130)
                label5a=Label(root1,text=user_dict["Train"][1],font=('bahnschrift',11))
                label5a.place(x=420,y=190)
                label6a=Label(root1,text=user_dict["Train"][0],font=('bahnschrift',11))
                label6a.place(x=700,y=100)
                label7a=Label(root1,text=user_dict["Seat"],font=('bahnschrift',11))
                label7a.place(x=720,y=160)
                label8a=Label(root1,text=user_dict["Train"][5],font=('bahnschrift',11))
                label8a.place(x=720,y=190)
        if flag==False:
            notexist.config(text="*This booking does not exist")
        else:
            notexist.config(text="                                                         ")

    def destination_select2(event):
        global destination2
        destination2=event

    def destination_cities2(event):
        global drop22
        global destination2
        try:
            destination2
            del destination2
        except NameError:
            pass
        citylist2=['Islamabad','Lahore','Multan','Quetta','Peshawar','Karachi']
        global departure2
        departure2=event
        drop22.destroy()
        citylist2.remove(departure2)
        var_drop22=StringVar()
        var_drop22.set('Select A City')
        drop22=OptionMenu(root1,var_drop22,*citylist2, command= destination_select2)
        drop22.place(x=860,y=260)


    style = ttk.Style()
    style.theme_use("clam")
    style.configure("Treeview", background="silver", foreground="black", rowheight=15,fieldbackground="silver")
    style.map('Treeview', background=[("selected", "orange")])
    traincards=ttk.Treeview(root1)
    traincards['columns'] = ("Date","Train ID", "Departure Time", "Destination Time", "Duration", "Fare Cost")

    traincards.column("#0", anchor=CENTER, width=120, minwidth=10)
    traincards.column("Date",anchor=CENTER, width=120, stretch=NO)
    traincards.column("Train ID",anchor=CENTER, width=120, stretch=NO)
    traincards.column("Departure Time",anchor=CENTER, width=120, stretch=NO)
    traincards.column("Destination Time",anchor=CENTER, width=120, stretch=NO)
    traincards.column("Duration",anchor=CENTER, width=120, stretch=NO)
    traincards.column("Fare Cost",anchor=CENTER, width=120, stretch=NO)

    traincards.heading("#0", text="#",anchor=CENTER)
    traincards.heading("Date", text="Date",anchor=CENTER)
    traincards.heading("Train ID", text="Train ID",anchor=CENTER)
    traincards.heading("Departure Time", text="Departure Time",anchor=CENTER)
    traincards.heading("Destination Time", text="Destination Time",anchor=CENTER)
    traincards.heading("Duration", text="Duration",anchor=CENTER)
    traincards.heading("Fare Cost", text="Fare Cost",anchor=CENTER)
    traincards.bind('<ButtonRelease-1>', selectItem)
    traincards.place(x=310, y = 300)

    toplabel=Label(root1,text="Please enter your CNIC here: ",font=('bahnschrift semibold',11)).place(x=330,y=10)
    cnic_entry=StringVar()
    cnicentry=Entry(root1,textvariable=cnic_entry).place(x=600,y=10)
    searchbooking=Button(root1, text= "Search", font=('bahnschrift semibold',9), padx=20, command=searchcnic).place(x=770, y=10)
    heading=Label(root1,text="Your Current Booking Details: ",font=('bahnschrift semibold',11))
    heading.place(x=330,y=60)
    changebooking=Button(root1, text= "Search Trains", font=('bahnschrift semibold',9), padx=15, command=Traincards).place(x=1030, y=260)
    label1=Label(root1,text="Name:",font=('bahnschrift',11)).place(x=350,y=100)
    label2=Label(root1,text="Departure Time:",font=('bahnschrift',11)).place(x=350,y=160)
    label3=Label(root1,text="Departure City:",font=('bahnschrift',11)).place(x=350,y=130)
    label4=Label(root1,text="Destination City:",font=('bahnschrift',11)).place(x=650,y=130)
    label5=Label(root1,text="Train ID:",font=('bahnschrift',11)).place(x=350,y=190)
    label6=Label(root1,text="Date:",font=('bahnschrift',11)).place(x=650,y=100)
    label7=Label(root1,text="Seating: ",font=('bahnschrift',11)).place(x=650,y=160)
    label8=Label(root1,text="Fare Cost: ",font=('bahnschrift',11)).place(x=650,y=190)
    destheading=Label(root1,text="Enter New Destination City: ",font=('bahnschrift',11)).place(x=660,y=260)
    dept_city=StringVar()
    deptheading=Label(root1,text="Enter New Departure City: ",font=('bahnschrift',11)).place(x=330,y=260)
    lowerlabel=Label(root1,text="To Update Your Booking: ",font=('bahnschrift semibold',12)).place(x=330,y=230)

    #making the seating structure
    seatheader = ttk.Label(root1, text = "Select Desired Seats From Dropbox Below: ", font=('corbel', 13)).place(x = 330, y = 490)
    WS = ttk.Label(root1, text = "WS = Window Seat ", font=('bahnschrift semibold', 9)).place(x = 650, y = 490)
    AS = ttk.Label(root1, text = "AS = Aisle Seat ", font=('bahnschrift semibold', 9)).place(x = 800, y = 490)
    UB = ttk.Label(root1, text = "UB = Upper Berth ", font=('bahnschrift semibold', 9)).place(x = 650, y = 530)
    LB = ttk.Label(root1, text = "LB = Lower Berth ", font=('bahnschrift semibold', 9)).place(x = 800, y = 530)
    infomessage = ttk.Label(root1, text = "*For Berth, fare will increase by Rs.100 ", font=('bahnschrift semibold', 8)).place(x = 900, y = 490)
    var_drop3=StringVar()
    var_drop3.set('Select your Seating')
    global drop4
    drop4=OptionMenu(root1,var_drop3,'')
    drop4.place(x=330,y=520)

    citylist2=['Islamabad','Lahore','Multan','Quetta','Peshawar','Karachi']

    var_drop12=StringVar()
    var_drop12.set('Select departure')
    drop12=OptionMenu(root1,var_drop12,*citylist2, command= destination_cities2)
    drop12.place(x=520,y=260)


    var_drop22=StringVar()
    var_drop22.set('Select Departure First')
    global drop22
    drop22=OptionMenu(root1, var_drop22 ,'')
    drop22.place(x=860,y=260)
    drop22.config(state=DISABLED)

    
    updatebooking=Button(root1, text= "Update Booking", font=('bahnschrift semibold',11), padx=20, command=updateuserrecord).place(x=990, y=520)
    goback=Button(root1, text= "Main Menu", font=('bahnschrift semibold',11), padx=37,command=mainmenu2).place(x=990, y=560)





    root1.geometry('1160x600')
    root1.resizable(False,False)
    root1.mainloop()



def page2():
    global root
    root = Tk()
    root.title("Cancel Booking")
    root.iconbitmap(path+'/train2.ico')


    img =Image.open(path+'/trainnn.jpg')
    img2= img.resize((300,500), Image.ANTIALIAS)
    img3= ImageTk.PhotoImage(img2)
    imglabel=Label(image=img3)
    imglabel.place(x=0,y=0)

    def seatreplace():
        user_dict={}
        file= open(path+'/Train_Data.txt', 'r')
        tempfile = open(path+"/tempfile.txt",'w')
        for line in file:
            listdata = line.split(",")
            cnicvalue = listdata[1][10:23]
            if cnic_entry.get() == cnicvalue:
                user_dict= json.loads(line)
                seatnumber=user_dict["Seat"]
                farecostvalue = user_dict["Train"][5]
                trainidvalue = user_dict["Train"][1][1:]#get train id and remove leading space
            else:
                tempfile.write(line) 
        file.close()
        tempfile.close()
        tempfile = open(path+"/tempfile.txt",'r')
        file= open(path+'/Train_Data.txt', 'w')
        for line in tempfile:
            file.write(line)
        file.close()
        tempfile.close()
        file= open(path+'/seating.txt', 'r')
        tempfile = open(path+"/tempfile.txt",'w')
        for line in file:
            if line[0:10] == trainidvalue:
                line = (line.strip() + "," + seatnumber) + '\n'
                tempfile.write(line)
            else:
                tempfile.write(line) 
        file.close()
        tempfile.close()
        tempfile = open(path+"/tempfile.txt",'r')
        file= open(path+'/seating.txt', 'w')
        for line in tempfile:
            file.write(line)
        file.close()
        tempfile.close()

        farecostvalue = 0.5 * int(farecostvalue)
        cancellation=Label(root,text="Booking Cancelled! ",font=('bahnschrift semibold',12)).place(x=330,y=420)
        faredisplay=Label(root,text="A fare of "+str(farecostvalue)+ " will be credited to your payment account.",font=('bahnschrift semibold',12)).place(x=330,y=450)



    def searchcnic():
        notexist=Label(root,text="",font=('bahnschrift',9))
        notexist.place(x=600,y=30)
        user_dict={}
        flag=False
        file = open(path+'/Train_Data.txt', 'r')
        for row in file:
            listdata = row.split(",")
            cnicvalue = listdata[1][10:23]
            if cnic_entry.get() == cnicvalue:
                flag=True
                user_dict= json.loads(row)
                label1a=Label(root,text=user_dict["Name"],font=('bahnschrift semibold',11)).place(x=460,y=230)
                label2a=Label(root,text=user_dict["Train"][2],font=('bahnschrift semibold',11)).place(x=460,y=290)
                label3a=Label(root,text=user_dict["Departure"],font=('bahnschrift semibold',11)).place(x=460,y=260)
                label4a=Label(root,text=user_dict["Destination"],font=('bahnschrift semibold',11)).place(x=750,y=260)
                label5a=Label(root,text=user_dict["Train"][1],font=('bahnschrift semibold',11)).place(x=460,y=320)
                label6a=Label(root,text=user_dict["Train"][0],font=('bahnschrift semibold',11)).place(x=750,y=230)
                label7a=Label(root,text=user_dict["Seat"],font=('bahnschrift semibold',11)).place(x=750,y=290)
                label9a=Label(root,text=user_dict["Train"][5],font=('bahnschrift semibold',11)).place(x=750,y=320)
                cancellationmessage=Label(root,text="*If you cancel your booking, only 50%  of the fare will be refunded.",font=('bahnschrift semibold',11)).place(x=310,y=350)
                cancelbutton=Button(root, text= "Cancel Booking", font=('bahnschrift semibold',10), padx=20, command=seatreplace).place(x=330, y=380)
        if flag==False:
            notexist.config(text="*This booking does not exist")
        else:
            notexist.config(text="                                                         ")

        


    toplabel=Label(root,text="Please enter your CNIC below to cancel booking: ",font=('bahnschrift semibold',13)).place(x=330,y=10)
    cnic_entry=StringVar()
    cnicentry=Entry(root,textvariable=cnic_entry).place(x=500,y=50)
    cnicheading=Label(root,text="CNIC: ",font=('bahnschrift semibold',13)).place(x=420,y=50)
    searchbooking=Button(root, text= "Search", font=('bahnschrift semibold',11), padx=20, command=searchcnic).place(x=480, y=90)
    heading=Label(root,text="Your Current Booking Details: ",font=('bahnschrift semibold',13)).place(x=320,y=180)
    label1=Label(root,text="Name:",font=('bahnschrift semibold',11)).place(x=320,y=230)
    label2=Label(root,text="Departure Time:",font=('bahnschrift semibold',11)).place(x=320,y=290)
    label3=Label(root,text="Departure City:",font=('bahnschrift semibold',11)).place(x=320,y=260)
    label4=Label(root,text="Destination City:",font=('bahnschrift semibold',11)).place(x=620,y=260)
    label5=Label(root,text="Train ID:",font=('bahnschrift semibold',11)).place(x=320,y=320)
    label6=Label(root,text="Departure Date:",font=('bahnschrift semibold',11)).place(x=620,y=230)
    label7=Label(root,text="Seating: ",font=('bahnschrift semibold',11)).place(x=620,y=290)
    label9=Label(root,text="Fare Cost: ",font=('bahnschrift semibold',11)).place(x=620,y=320)
    backk=Button(root, text= "Main Menu", font=('bahnschrift semibold',11), padx=20, command=mainmenu3).place(x=750, y=450)


    root.geometry('900x500')
    root.resizable(False,False)
    root.mainloop()




mainmenu()



